import 'package:flutter/material.dart';
import 'package:go_router/go_router.dart';
import '../../../../../core/l10n/app_localizations.dart';
import '../../widgets/common_form_widgets.dart';
import '../../widgets/animation_widgets.dart';
import '../../widgets/mobile_animation_mixin.dart';
import '../widgets/auth_controller.dart';

class ForgotPasswordMobileScreen extends StatefulWidget {
  final AuthController authController;
  const ForgotPasswordMobileScreen({super.key, required this.authController});

  @override
  State<ForgotPasswordMobileScreen> createState() => _ForgotPasswordMobileScreenState();
}

class _ForgotPasswordMobileScreenState extends State<ForgotPasswordMobileScreen> with TickerProviderStateMixin, MobileAnimationMixin {
  final _formKey = GlobalKey<FormState>();

  bool get isLoading => widget.authController.isLoading;
  bool isEmailSent = false;

  void _handleResetPassword() async {
    if (!_formKey.currentState!.validate()) return;
    setState(() => widget.authController.setLoading(true));
    await Future.delayed(const Duration(seconds: 2));
    setState(() {
      widget.authController.setLoading(false);
      isEmailSent = true;
    });
  }

  String? _validateEmail(String? value, AppLocalizations l10n) {
    if (value == null || value.isEmpty) {
      return l10n.emailRequired;
    }
    if (!RegExp(r'^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}').hasMatch(value)) {
      return l10n.emailInvalid;
    }
    return null;
  }

  @override
  Widget build(BuildContext context) {
    final theme = Theme.of(context);
    final l10n = AppLocalizations.of(context);

    return Scaffold(
      backgroundColor: theme.colorScheme.background,
      body: SafeArea(
        child: FadeTransition(
          opacity: fadeAnimation,
          child: SlideTransition(
            position: slideAnimation,
            child: SingleChildScrollView(
              padding: const EdgeInsets.symmetric(horizontal: 24.0),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.stretch,
                children: [
                  const SizedBox(height: 60),
                  Center(
                    child: AnimationWidgets.buildAnimatedLogo(
                      icon: Icons.lock_reset,
                      theme: theme,
                      size: 90,
                      iconSize: 45,
                    ),
                  ),
                  const SizedBox(height: 32),
                  AnimationWidgets.buildAnimatedTitle(
                    title: isEmailSent ? l10n.emailSentTitle : l10n.forgotPassword,
                    theme: theme,
                    fontSize: 32,
                  ),
                  const SizedBox(height: 8),
                  AnimationWidgets.buildAnimatedSubtitle(
                    subtitle: isEmailSent ? l10n.emailSentSubtitle : l10n.forgotPasswordSubtitle,
                    theme: theme,
                    fontSize: 16,
                  ),
                  const SizedBox(height: 48),
                  if (!isEmailSent) ...[
                    Form(
                      key: _formKey,
                      child: Column(
                        children: [
                          CommonFormWidgets.universalTextField(
                            controller: widget.authController.emailController,
                            hintText: l10n.email,
                            icon: Icons.email_outlined,
                            theme: theme,
                            isDesktop: false,
                            keyboardType: TextInputType.emailAddress,
                            validator: (v) => _validateEmail(v, l10n),
                          ),
                          const SizedBox(height: 36),
                          CommonFormWidgets.actionButton(
                            onPressed: isLoading ? null : _handleResetPassword,
                            isLoading: isLoading,
                            text: l10n.sendInstructions,
                            isDesktop: false,
                            height: 56,
                          ),
                        ],
                      ),
                    ),
                  ] else ...[
                    _buildSuccessMessage(theme, l10n),
                  ],
                  const SizedBox(height: 36),
                  CommonFormWidgets.bottomLinkRow(
                    questionText: l10n.rememberPassword,
                    actionText: l10n.signInButton,
                    onTap: () => context.go('/sign-in'),
                    theme: theme,
                    isDesktop: false,
                  ),
                ],
              ),
            ),
          ),
        ),
      ),
    );
  }

  Widget _buildSuccessMessage(ThemeData theme, AppLocalizations l10n) {
    return Container(
      padding: const EdgeInsets.all(24),
      decoration: BoxDecoration(
        borderRadius: BorderRadius.circular(16),
        color: theme.colorScheme.surface,
        border: Border.all(color: theme.colorScheme.outline),
        boxShadow: [
          BoxShadow(
            color: Colors.black.withOpacity(0.08),
            blurRadius: 16,
            offset: const Offset(0, 4),
          ),
        ],
      ),
      child: Column(
        children: [
          Container(
            width: 60,
            height: 60,
            decoration: BoxDecoration(
              borderRadius: BorderRadius.circular(30),
              color: theme.colorScheme.primary,
            ),
            child: const Icon(Icons.check, color: Colors.white, size: 30),
          ),
          const SizedBox(height: 16),
          Text(
            l10n.emailSentTitle,
            style: TextStyle(
              fontSize: 18,
              fontWeight: FontWeight.w700,
              color: theme.colorScheme.onSurface,
            ),
          ),
          const SizedBox(height: 8),
          Text(
            l10n.emailSentCheck,
            style: TextStyle(
              fontSize: 14,
              color: theme.colorScheme.onSurface.withOpacity(0.7),
            ),
          ),
        ],
      ),
    );
  }
} 